package org.pih.warehouse.putaway

import grails.gorm.transactions.Transactional
import org.grails.web.json.JSONObject
import org.pih.warehouse.api.Putaway
import org.pih.warehouse.api.PutawayItem
import org.pih.warehouse.api.PutawayTaskAdapter
import org.pih.warehouse.inventory.InventoryLevel
import org.pih.warehouse.order.Order

@Transactional
class PutawayController {

    def productAvailabilityService
    PutawayService putawayService
    PutawayTaskService putawayTaskService

    def index() {
        redirect(action: "create")
    }

    def list() {
        redirect(action: "create")
    }

    // This template is generated by webpack during application start
    def create() {
        render(view: "/common/react")
    }

    @Transactional(readOnly = true)
    def show(String id) {
        Order order = Order.get(id)
        if (!order) {
            flash.message = "Order not found with id ${id}"
            redirect(controller: "order", action: "list")
            return
        }
        [orderInstance: order]
    }

    def putawayTasks(String id) {
        Order order = Order.get(id)
        if (!order) {
            render status: 404, text: "Order not found"
            return
        }

        List<PutawayTask> tasks = order.orderItems.collect { orderItem ->
            PutawayTaskAdapter.toPutawayTask(orderItem)
        }.findAll { it != null }

        render(template: "putawayTasks", model: [orderInstance: order, putawayTasks: tasks])
    }

    def rollback(String id) {
        Putaway putaway = putawayService.getPutaway(id)
        putawayService.rollbackPutaway(putaway)

        flash.message = "Rollback was completed successfully for putaway ${putaway.putawayNumber}"

        redirect(controller: "putaway", action: "show", id: id)
    }

    def generatePdf() {
        log.info "Params " + params

        Putaway putaway
        JSONObject jsonObject

        if (request.method == "POST") {
            jsonObject = request.JSON
        } else if (params.id) {
            Order order = Order.get(params.id)
            putaway = Putaway.createFromOrder(order)
            putaway.sortBy = params.sortBy
            putaway.putawayItems.each { PutawayItem putawayItem ->
                putawayItem.availableItems =
                        productAvailabilityService.getAllAvailableBinLocations(putawayItem.currentFacility, putawayItem.product?.id)
                putawayItem.inventoryLevel = InventoryLevel.findByProductAndInventory(putawayItem.product, putaway.origin.inventory)
            }
            jsonObject = new JSONObject(putaway.toJson())
        }

        renderPdf(
                template: "/putaway/print",
                model: [jsonObject: jsonObject],
                filename: "Putaway ${putaway?.putawayNumber}.pdf"
        )
    }
}
